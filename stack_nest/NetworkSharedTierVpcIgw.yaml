AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ProjectId:
    Description: "Project name id."
    Type: String
    AllowedPattern: '^[a-zA-Z0-9-/:-@\[-\`\{-\~]+$'
    ConstraintDescription: "InvalidValue[ProjectId]"
    Default: cfn
  EnvironmentType:
      Description: The environment type
      Type: String
      Default: test
      AllowedValues:
        - prod
        - test
      ConstraintDescription: must be a prod or test
Mappings:
  prod:
    VPC:
      VpcCidrBlock: 10.0.0.0/16
    Subnet:
      PublicSubnet1: 10.0.1.0/24
      PublicSubnet2: 10.0.2.0/24
      PrivateSubnet1: 10.0.3.0/24
      PrivateSubnet2: 10.0.4.0/24
      DBSubnet1: 10.0.5.0/24
      DBSubnet2: 10.0.6.0/24
  test:
    VPC:
      VpcCidrBlock: 10.1.0.0/16
    Subnet:
      PublicSubnet1: 10.1.1.0/24
      PublicSubnet2: 10.1.2.0/24
      PrivateSubnet1: 10.1.3.0/24
      PrivateSubnet2: 10.1.4.0/24
      DBSubnet1: 10.1.5.0/24
      DBSubnet2: 10.1.6.0/24

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !FindInMap [ !Ref EnvironmentType, VPC, VpcCidrBlock ]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-vpc"
# PublicSubnet
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [ !Ref EnvironmentType, Subnet, PublicSubnet1 ]
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1a
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-PublicSubnet-1"
      VpcId: !Ref VPC
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [ !Ref EnvironmentType, Subnet, PublicSubnet2 ]
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1d
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-PublicSubnet-2"
      VpcId: !Ref VPC

# PrivateSubnet
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [ !Ref EnvironmentType, Subnet, PrivateSubnet1 ]
      AvailabilityZone: ap-northeast-1a
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-PrivateSubnet-1"
      VpcId: !Ref VPC
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [ !Ref EnvironmentType, Subnet, PrivateSubnet2 ]
      AvailabilityZone: ap-northeast-1d
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-PrivateSubnet-2"
      VpcId: !Ref VPC

# DBSubnet
  DBSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [ !Ref EnvironmentType,  Subnet, DBSubnet1 ]
      AvailabilityZone: ap-northeast-1a
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-DBSubnet-1"
      VpcId: !Ref VPC
  DBSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !FindInMap [ !Ref EnvironmentType, Subnet, DBSubnet2 ]
      AvailabilityZone: ap-northeast-1d
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-DBSubnet-2"
      VpcId: !Ref VPC

# IGW
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-IGW"
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

# Public-Routetable
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-public-route"
  AddInternetGatewayToPublicRouteTable:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  AttachPublicRouteTableToPublicSubnet1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  AttachPublicRouteTableToPublicSubnet2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

# Private-Routetable
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-private-route"
  AttachPrivateRouteTableToPrivateSubnet1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  AttachPrivateRouteTableToPrivateSubnet2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

# DB-Routetable
  DBRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectId}-${EnvironmentType}-db-route"
  AttachDBRouteTableToDBSubnet1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref DBRouteTable
      SubnetId: !Ref DBSubnet1
  AttachDBRouteTableToDBSubnet2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref DBRouteTable
      SubnetId: !Ref DBSubnet2

Outputs:
  MyVPC:
    Value: !Ref VPC
    Export:
      Name: !Sub "${ProjectId}-${EnvironmentType}-vpc"
  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${ProjectId}-${EnvironmentType}-PublicSubnet1"
  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${ProjectId}-${EnvironmentType}-PublicSubnet2"
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${ProjectId}-${EnvironmentType}-PrivateSubnet1"
  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${ProjectId}-${EnvironmentType}-PrivateSubnet2"
  DBSubnet1:
    Value: !Ref DBSubnet1
    Export:
      Name: !Sub "${ProjectId}-${EnvironmentType}-DBSubnet1"
  DBSubnet2:
    Value: !Ref DBSubnet2
    Export:
      Name: !Sub "${ProjectId}-${EnvironmentType}-DBSubnet2"
